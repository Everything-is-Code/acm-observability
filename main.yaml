---
- name: Install Observability Operator
  hosts: localhost
  vars:
    - access_key: "your_key"
      secret_key: "your_secret"
      oc_cli_url: "url_for_cli download"
      thanos_bc: "obc-open-cluster-management-observability-thanos-bc"
  pre_tasks:

    - name: Check if kube.config file exists
      ansible.builtin.stat:
        path: files/config/kube.config
      register: kubeconfig_exists

    - name: Add Kubeconfig file
      ansible.builtin.debug:
        msg: "Add the kube.config in the correct folder"
      when: not kubeconfig_exists.stat.exists

    - name: Check if OC cli file exists
      ansible.builtin.stat:
        path: files/binary/oc
      register: oc_exists

    - name: Unarchive the OC cli that needs to be downloaded (added in 2.0) can be commentend if you placed the OC cli
      ansible.builtin.unarchive:
        src: "{{ oc_cli_url }}"
        dest: files/binary/
        remote_src: true
      when: not oc_exists.stat.exists

  tasks:

    - name: Install ArgoCD Step 1 - Create Namespace
      redhat.openshift.k8s:
        kubeconfig: config/kube.config
        src: argocd/00-argocd-namespace.yaml
        namespace: openshift-gitops
        state: present

    - name: Install ArgoCD Step 2 - Create RBAC
      redhat.openshift.k8s:
        kubeconfig: config/kube.config
        src: argocd/01-argocd-rbac.yaml
        state: present

    - name: Install ArgoCD Step 3 - Create Subscription
      redhat.openshift.k8s:
        kubeconfig: config/kube.config
        src: argocd/01-argocd-subscription.yaml
        state: present

    - name: Wait for ArgoCD to finish deploying
      ansible.builtin.shell: |
        while ! ./files/binary/oc wait pods --all --namespace=openshift-gitops --for=condition=Ready --timeout=600s >/dev/null; do \
          sleep 5
        done
      register: argocd_ready
      changed_when: argocd_ready

    - name: Install Advance Cluster Management using ArgoCD
      redhat.openshift.k8s:
        kubeconfig: config/kube.config
        src: argocd-apps/00_acm-appset.yaml
        state: present

    - name: Wait for ACM to finish installing
      ansible.builtin.shell: |
        while ! ./files/binary/oc wait mce multiclusterengine --for=condition=available --timeout=1500s >/dev/null; do \
          sleep 5
        done
      register: acm_ready
      changed_when: acm_ready

    - name: Install the ODF Operator & Noobaa using ArgoCD
      redhat.openshift.k8s:
        kubeconfig: config/kube.config
        src: argocd-apps/00-odf-app.yaml
        state: present

    - name: Wait for ODF object storage bucket to be created
      ansible.builtin.shell: |
        while ! ./files/binary/oc wait crd objectbuckets.objectbucket.io --for=condition=established --timeout=600s >/dev/null; do \
          sleep 5
        done
      register: objectbucket_ready
      changed_when: objectbucket_ready

    - name: Install Observability using ArgoCD
      redhat.openshift.k8s:
        kubeconfig: config/kube.config
        src: argocd-apps/00_acm-obs.yaml
        state: present

    - name: Get Values for thanos object storage name
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          ./files/binary/oc get objectbucket {{ thanos_bc }} -n open-cluster-management-observability -o json | jq -r '.spec.endpoint.bucketName'
      register: s3_bucket
      changed_when: s3_bucket.rc

    - name: Get Values for thanos object storages endpoint
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          ./files/binary/oc get objectbucket {{ thanos_bc }} -n open-cluster-management-observability -o json | jq -r '.spec.endpoint.bucketHost'
      register: s3_endpoint
      changed_when: s3_endpoint.rc

    - name: Create TMP folder
      ansible.builtin.file:
        path: files/tmp
        state: directory
        mode: "0775"

    - name: Replace template for Thanos Object Storage
      ansible.builtin.template:
        src: template_thanos-object-storage.j2
        dest: files/tmp/thanos-object-storage.yaml
        mode: preserve

    - name: Create Observability additional resources
      redhat.openshift.k8s:
        kubeconfig: config/kube.config
        src: tmp/thanos-object-storage.yaml
        state: present

    - name: Delete Thanos Object Storage
      ansible.builtin.file:
        path: files/tmp
        state: absent
